version: '3.9'

services:
  traefik:
    image: traefik:v3.0
    restart: unless-stopped
    command:
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entryPoint.to=websecure
      - --entrypoints.web.http.redirections.entryPoint.scheme=https
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.letsencrypt.acme.tlschallenge=true
      - --certificatesresolvers.letsencrypt.acme.email=${LETSENCRYPT_EMAIL}
      - --certificatesresolvers.letsencrypt.acme.storage=/etc/traefik/acme.json
      - --log.level=INFO
      - --accesslog=true
      - --metrics.prometheus=true
      - --metrics.prometheus.addrouterslabels=true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./proxy/traefik/acme.json:/etc/traefik/acme.json
    environment:
      - TZ=${TZ:-Europe/Berlin}
    labels:
      - traefik.enable=false
      - traefik.http.middlewares.secure-headers.headers.stsSeconds=31536000
      - traefik.http.middlewares.secure-headers.headers.stsIncludeSubdomains=true
      - traefik.http.middlewares.secure-headers.headers.stsPreload=true
      - traefik.http.middlewares.secure-headers.headers.forceSTSHeader=true
      - traefik.http.middlewares.secure-headers.headers.referrerPolicy=no-referrer-when-downgrade
      - traefik.http.middlewares.secure-headers.headers.contentTypeNosniff=true
      - traefik.http.middlewares.secure-headers.headers.browserXssFilter=true
      - traefik.http.middlewares.compress.compress=true
      - traefik.http.middlewares.frontend-cache.headers.customresponseheaders.Cache-Control=public,max-age=600
      - traefik.http.middlewares.wordpress-cache.headers.customresponseheaders.Cache-Control=public,max-age=300
    networks:
      - default
      - monitoring
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M

  db:
    image: postgres:15
    env_file: .env
    command:
      - postgres
      - -c
      - shared_preload_libraries=pg_stat_statements
      - -c
      - pg_stat_statements.track=all
      - -c
      - log_min_duration_statement=500
      - -c
      - log_checkpoints=on
    volumes:
      - db-data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready -U $${POSTGRES_USER:-postgres} -d $${POSTGRES_DB:-postgres}
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    command: ["redis-server", "--save", "60", "1", "--loglevel", "warning"]
    volumes:
      - redis-data:/data
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M

  wp-db:
    image: mariadb:11
    env_file: .env
    volumes:
      - wp-db-data:/var/lib/mysql
    restart: unless-stopped
    healthcheck:
      test:
        - CMD-SHELL
        - |
          MYSQL_PWD="$${MARIADB_PASSWORD:-$${MARIADB_ROOT_PASSWORD:-}}"
          export MYSQL_PWD
          mysqladmin ping -h localhost -u "$${MARIADB_USER:-root}" --silent
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: '1.5'
          memory: 1024M

  backend:
    image: silentoakranch/backend:latest
    build: ./backend
    env_file: .env
    restart: unless-stopped
    depends_on:
      - db
      - redis
    expose:
      - "8080"
    volumes:
      - ./shared/jwt/backend:/var/www/backend/config/jwt
      - ./shared/backend/var:/var/www/backend/var
      - ./shared/agreements/signing:/var/www/backend/config/agreements
      - audit-log:/var/www/backend/shared/audit
    networks:
      - default
      - symfony-wp
    labels:
      - traefik.enable=true
      - traefik.http.routers.backend.rule=Host(`${DOMAIN}`) && PathPrefix(`/api`)
      - traefik.http.routers.backend.entrypoints=websecure
      - traefik.http.routers.backend.tls.certresolver=letsencrypt
      - traefik.http.routers.backend.middlewares=backend-strip,secure-headers,compress
      - traefik.http.middlewares.backend-strip.stripprefix.prefixes=/api
      - traefik.http.services.backend.loadbalancer.server.port=8080
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s

    environment:
      - REDIS_URL=${REDIS_URL:-redis://redis:6379}

    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 1536M

  frontend:
    image: silentoakranch/frontend:latest
    build:
      context: ./frontend
      args:
        VITE_STRIPE_PUBLISHABLE_KEY: ${VITE_STRIPE_PUBLISHABLE_KEY}
    expose:
      - "80"
    environment:
      - TZ=${TZ:-Europe/Berlin}
    labels:
      - traefik.enable=true
      - traefik.http.routers.frontend.rule=Host(`${DOMAIN}`)
      - traefik.http.routers.frontend.entrypoints=websecure
      - traefik.http.routers.frontend.tls.certresolver=letsencrypt
      - traefik.http.routers.frontend.middlewares=secure-headers,compress,frontend-cache
      - traefik.http.services.frontend.loadbalancer.server.port=80
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
    healthcheck:
      test:
        - CMD-SHELL
        - status=0; wget -q --spider http://127.0.0.1/ >/dev/null 2>&1 || status=$$?; [ $$status -eq 0 ] || [ $$status -eq 8 ]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 20s

  wordpress:
    image: ${WORDPRESS_IMAGE:-wordpress:6.4.3-php8.3-apache}
    env_file: .env
    depends_on:
      - wp-db
    volumes:
      - wp-content:/var/www/html/wp-content
    networks:
      - default
      - symfony-wp
    environment:
      - WP_CACHE=${WP_CACHE:-true}
    labels:
      - traefik.enable=true
      - traefik.http.routers.wordpress.rule=Host(`${BOOKING_DOMAIN:-book.silentoakranch.de}`)
      - traefik.http.routers.wordpress.entrypoints=websecure
      - traefik.http.routers.wordpress.tls.certresolver=letsencrypt
      - traefik.http.routers.wordpress.middlewares=secure-headers,compress,wordpress-cache
      - traefik.http.services.wordpress.loadbalancer.server.port=80
    deploy:
      resources:
        limits:
          cpus: '1.5'
          memory: 1024M

  uptime-kuma:
    image: louislam/uptime-kuma:1
    restart: unless-stopped
    user: "1000:1000"
    volumes:
      - uptime-data:/app/data
    environment:
      - TZ=${TZ:-Europe/Berlin}
    labels:
      - traefik.enable=true
      - traefik.http.routers.status.rule=Host(`status.${DOMAIN}`)
      - traefik.http.routers.status.entrypoints=websecure
      - traefik.http.routers.status.tls.certresolver=letsencrypt
      - traefik.http.services.status.loadbalancer.server.port=3001
      - traefik.http.routers.status.middlewares=status-auth
      - traefik.http.middlewares.status-auth.basicauth.users=${STATUS_DASH_AUTH_USERS}
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M

  prometheus:
    image: prom/prometheus:v2.51.2
    restart: unless-stopped
    user: "65534:65534"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./monitoring/prometheus/alert.rules.yml:/etc/prometheus/alert.rules.yml:ro
      - prometheus-data:/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --storage.tsdb.retention.time=30d
      - --web.enable-lifecycle
    networks:
      - monitoring
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1024M

  alertmanager:
    image: prom/alertmanager:v0.26.0
    restart: unless-stopped
    user: "65534:65534"
    volumes:
      - ./monitoring/alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
      - alertmanager-data:/alertmanager
    command:
      - --config.file=/etc/alertmanager/alertmanager.yml
      - --storage.path=/alertmanager
      - --config.expand-env=true
    environment:
      - ALERTMANAGER_SMTP_HOST=${ALERTMANAGER_SMTP_HOST}
      - ALERTMANAGER_SMTP_PORT=${ALERTMANAGER_SMTP_PORT:-587}
      - ALERTMANAGER_SMTP_USER=${ALERTMANAGER_SMTP_USER}
      - ALERTMANAGER_SMTP_PASSWORD=${ALERTMANAGER_SMTP_PASSWORD}
      - ALERTMANAGER_SMTP_FROM=${ALERTMANAGER_SMTP_FROM}
      - ALERTMANAGER_EMAIL_TO=${ALERTMANAGER_EMAIL_TO:-admin@silentoakranch.de}
      - ALERTMANAGER_TELEGRAM_CHAT_ID=${ALERTMANAGER_TELEGRAM_CHAT_ID:-}
      - ALERTMANAGER_TELEGRAM_TOKEN=${ALERTMANAGER_TELEGRAM_TOKEN:-}
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:10.4.3
    restart: unless-stopped
    user: "472"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards:ro
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
      - GF_AUTH_ANONYMOUS_ENABLED=false
      - GF_SERVER_ROOT_URL=https://metrics.${DOMAIN}
      - TZ=${TZ:-Europe/Berlin}
    networks:
      - monitoring

  oauth2-proxy:
    image: quay.io/oauth2-proxy/oauth2-proxy:v7.5.1
    restart: unless-stopped
    depends_on:
      - grafana
    environment:
      - OAUTH2_PROXY_PROVIDER=${OAUTH2_PROXY_PROVIDER:-oidc}
      - OAUTH2_PROXY_CLIENT_ID=${OAUTH2_PROXY_CLIENT_ID}
      - OAUTH2_PROXY_CLIENT_SECRET=${OAUTH2_PROXY_CLIENT_SECRET}
      - OAUTH2_PROXY_COOKIE_SECRET=${OAUTH2_PROXY_COOKIE_SECRET}
      - OAUTH2_PROXY_REDIRECT_URL=https://metrics.${DOMAIN}/oauth2/callback
      - OAUTH2_PROXY_UPSTREAMS=http://grafana:3000/
      - OAUTH2_PROXY_EMAIL_DOMAINS=${OAUTH2_PROXY_EMAIL_DOMAINS:-*}
      - OAUTH2_PROXY_OIDC_ISSUER_URL=${OAUTH2_PROXY_OIDC_ISSUER_URL}
      - OAUTH2_PROXY_HTTP_ADDRESS=0.0.0.0:4180
      - TZ=${TZ:-Europe/Berlin}
    labels:
      - traefik.enable=true
      - traefik.http.routers.metrics.rule=Host(`metrics.${DOMAIN}`)
      - traefik.http.routers.metrics.entrypoints=websecure
      - traefik.http.routers.metrics.tls.certresolver=letsencrypt
      - traefik.http.services.metrics.loadbalancer.server.port=4180
    networks:
      - monitoring

  loki:
    image: grafana/loki:3.0.0
    restart: unless-stopped
    user: "10001"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./monitoring/loki/config.yml:/etc/loki/local-config.yaml:ro
      - loki-data:/loki
    networks:
      - monitoring

  promtail:
    image: grafana/promtail:3.0.0
    restart: unless-stopped
    command: -config.file=/etc/promtail/config.yml
    volumes:
      - ./monitoring/promtail/config.yml:/etc/promtail/config.yml:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - monitoring

  node-exporter:
    image: prom/node-exporter:v1.7.0
    restart: unless-stopped
    pid: host
    command:
      - --path.rootfs=/host
      - --collector.filesystem.ignored-mount-points=^/(dev|proc|sys|run|var/lib/docker/.+)($|/)
    volumes:
      - /:/host:ro,rslave
    networks:
      - monitoring

  postgres-exporter:
    image: quay.io/prometheuscommunity/postgres-exporter:v0.12.0
    restart: unless-stopped
    environment:
      - DATA_SOURCE_NAME=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}?sslmode=disable
      - PG_EXPORTER_EXTEND_QUERY_PATH=/etc/postgres_exporter/queries.yml
    volumes:
      - ./monitoring/postgres-exporter/queries.yml:/etc/postgres_exporter/queries.yml:ro
    networks:
      - monitoring
      - default

  backup-cron:
    image: silentoakranch/backup-cron:latest
    build:
      context: ./scripts/backup-image
    restart: unless-stopped
    user: root
    env_file: .env
    environment:
      - CRONTAB=0 3 * * * /opt/backup.sh >> /proc/1/fd/1 2>&1
      - BACKUP_WORKDIR=/tmp/backup
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - MARIADB_HOST=wp-db
      - MARIADB_PORT=3306
      - STORAGE_BOX_REMOTE=${STORAGE_BOX_REMOTE}
      - RCLONE_CONFIG=/config/rclone/rclone.conf
      - TZ=${TZ:-Europe/Berlin}
    depends_on:
      - db
      - wp-db
    volumes:
      - ./scripts/backup.sh:/opt/backup.sh:ro
      - ./shared:/data/shared:ro
      - ./shared/backend/var:/data/backend-var:ro
      - ./wp-content:/data/wp-content:ro
      - ./monitoring/rclone:/config/rclone:ro
    networks:
      - default
      - monitoring

volumes:
  db-data:
  wp-db-data:
  wp-content:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./wp-content
  audit-log:
  uptime-data:
  prometheus-data:
  grafana-data:
  loki-data:
  alertmanager-data:
  redis-data:

networks:
  symfony-wp:
    internal: true
  monitoring:
    internal: true
